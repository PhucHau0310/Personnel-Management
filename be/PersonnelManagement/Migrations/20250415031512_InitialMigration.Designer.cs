// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonnelManagement.Data;

#nullable disable

namespace PersonnelManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250415031512_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleAccountId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("990a0ff2-843d-4ae6-bfb7-a0a6c985f171"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5992),
                            Email = "haunhpr024@gmail.com",
                            PasswordHash = "$2a$11$inaTR/gdzUEJ0f.G2mqXMe8IlGmgUgKt5ybuaAW8gUiiTWL8rhTS2",
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5993),
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("f9290bcb-7512-49cc-b39f-7d9579bffe56"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 789, DateTimeKind.Utc).AddTicks(7215),
                            Email = "haunhpr024@gmail.com",
                            PasswordHash = "$2a$11$imtBcpYESbP793xBVjJgVOqqTODprwv0E5tYz6h2yLX9HQcpShGr.",
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 789, DateTimeKind.Utc).AddTicks(7224),
                            Username = "ceo"
                        },
                        new
                        {
                            Id = new Guid("cc3e2505-39ac-4fcf-b1fc-787ec6fadfa8"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 991, DateTimeKind.Utc).AddTicks(56),
                            Email = "haunhpr024@gmail.com",
                            PasswordHash = "$2a$11$aNsWx.Amm9k5iQ43PKF7HuKydL2Qn/bVfFcbn6xsCFPLpPevNZDei",
                            RoleAccountId = new Guid("7a0c9b26-55a0-4197-a8d9-513b983b39b2"),
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 991, DateTimeKind.Utc).AddTicks(67),
                            Username = "vicedirector"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0197e334-3431-426e-ae7e-60374118707b"),
                            Code = "ADD_PERSONNEl",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6175),
                            Name = "Cho phép thêm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6178)
                        },
                        new
                        {
                            Id = new Guid("f1831356-fe9d-4f74-a66d-50c42da4efd6"),
                            Code = "EDIT_PERSONNEl",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6181),
                            Name = "Cho phép sửa thông tin nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6181)
                        },
                        new
                        {
                            Id = new Guid("0c24ccff-1cde-47a0-b58d-50ea0e8bc652"),
                            Code = "DELETE_PERSONNEl",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6184),
                            Name = "Cho phép xóa nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6185)
                        },
                        new
                        {
                            Id = new Guid("520bcdbd-8129-4dc6-8151-c16f238fda12"),
                            Code = "ADD_PERSONNEl_GROUP",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6187),
                            Name = "Cho phép thêm phân nhóm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6187)
                        },
                        new
                        {
                            Id = new Guid("2de135a5-3149-425c-a73e-02d372367380"),
                            Code = "EDIT_PERSONNEl_GROUP",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6189),
                            Name = "Cho phép sửa phân nhóm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6189)
                        },
                        new
                        {
                            Id = new Guid("95c66136-aca8-4b32-a852-c973b4cd2586"),
                            Code = "DELETE_PERSONNEl_GROUP",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6191),
                            Name = "Cho phép xóa phân nhóm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6191)
                        },
                        new
                        {
                            Id = new Guid("c6fc4c0b-5238-4698-8378-2b20500087aa"),
                            Code = "VIEW_HISTORY",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6196),
                            Name = "Cho phép xem lịch sử",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6196)
                        },
                        new
                        {
                            Id = new Guid("952dea7b-d16c-4548-a84d-e2cfbe810747"),
                            Code = "ADD_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6198),
                            Name = "Cho phép thêm tài khoản đăng nhập",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6198)
                        },
                        new
                        {
                            Id = new Guid("b608ff06-a7f4-479f-8033-3813125870fc"),
                            Code = "EDIT_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6200),
                            Name = "Cho phép sửa tài khoản đăng nhập",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6200)
                        },
                        new
                        {
                            Id = new Guid("abc92f4e-980a-42fe-b62f-25c1ad27f8dd"),
                            Code = "DELETE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6202),
                            Name = "Cho phép xóa tài khoản đăng nhập",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6202)
                        },
                        new
                        {
                            Id = new Guid("c120becb-15d6-420b-aae7-b429709c391b"),
                            Code = "ADD_ROLE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6204),
                            Name = "Cho phép thêm nhóm phân quyền",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6204)
                        },
                        new
                        {
                            Id = new Guid("96a52b57-258b-4cb4-bd21-47ebf9d04a70"),
                            Code = "EDIT_ROLE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6209),
                            Name = "Cho phép sửa nhóm phân quyền",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6210)
                        },
                        new
                        {
                            Id = new Guid("247ed2fa-2812-4d60-bb94-5131fe5ad65d"),
                            Code = "DELETE_ROLE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6211),
                            Name = "Cho phép xóa nhóm phân quyền",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 10, 195, DateTimeKind.Utc).AddTicks(6212)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Personnel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateCreatedCccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RolePersonnel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NumberId")
                        .IsUnique();

                    b.HasIndex("RolePersonnel");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.PersonnelHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelHistories");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RoleAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(5979),
                            RoleName = "Quản trị viên",
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(5980)
                        },
                        new
                        {
                            Id = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(5985),
                            RoleName = "Giám đốc",
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(5985)
                        },
                        new
                        {
                            Id = new Guid("7a0c9b26-55a0-4197-a8d9-513b983b39b2"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(5988),
                            RoleName = "Phó giám đốc",
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(5989)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleAccountId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e82fda1-09d5-42d0-9688-7cf8ecaa4ddb"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6320),
                            PermissionId = new Guid("0197e334-3431-426e-ae7e-60374118707b"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6321)
                        },
                        new
                        {
                            Id = new Guid("292babcf-2338-4279-9bf8-4937551a14dc"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6325),
                            PermissionId = new Guid("f1831356-fe9d-4f74-a66d-50c42da4efd6"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6326)
                        },
                        new
                        {
                            Id = new Guid("92068ee1-b455-49aa-b7f6-6be1c71d8f6f"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6329),
                            PermissionId = new Guid("0c24ccff-1cde-47a0-b58d-50ea0e8bc652"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6330)
                        },
                        new
                        {
                            Id = new Guid("d0889dd4-7161-4d0f-a204-98f6115380fe"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6333),
                            PermissionId = new Guid("520bcdbd-8129-4dc6-8151-c16f238fda12"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6334)
                        },
                        new
                        {
                            Id = new Guid("8002a07e-94b9-4e43-905a-a0b85b9241ea"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6337),
                            PermissionId = new Guid("2de135a5-3149-425c-a73e-02d372367380"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6338)
                        },
                        new
                        {
                            Id = new Guid("df0c222a-f21e-420c-8047-529d58c66d15"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6341),
                            PermissionId = new Guid("95c66136-aca8-4b32-a852-c973b4cd2586"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6342)
                        },
                        new
                        {
                            Id = new Guid("431780db-629e-4680-b5fa-b4ec3ec027bb"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6348),
                            PermissionId = new Guid("c120becb-15d6-420b-aae7-b429709c391b"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6348)
                        },
                        new
                        {
                            Id = new Guid("7a47aecc-d2b4-45aa-84ec-08d50b8b3292"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6352),
                            PermissionId = new Guid("96a52b57-258b-4cb4-bd21-47ebf9d04a70"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6352)
                        },
                        new
                        {
                            Id = new Guid("0d0a3807-ef4e-40ab-a7a6-33114c1701b4"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6356),
                            PermissionId = new Guid("247ed2fa-2812-4d60-bb94-5131fe5ad65d"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6356)
                        },
                        new
                        {
                            Id = new Guid("edfbdfee-eb1a-4105-9340-8fc6429e2bb6"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6359),
                            PermissionId = new Guid("c6fc4c0b-5238-4698-8378-2b20500087aa"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6360)
                        },
                        new
                        {
                            Id = new Guid("3fd99a79-4577-43b1-8551-d09bbef31018"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6363),
                            PermissionId = new Guid("952dea7b-d16c-4548-a84d-e2cfbe810747"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6364)
                        },
                        new
                        {
                            Id = new Guid("3abe4fe0-38a6-47ac-9e07-aa22db745ba9"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6367),
                            PermissionId = new Guid("b608ff06-a7f4-479f-8033-3813125870fc"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6368)
                        },
                        new
                        {
                            Id = new Guid("596bdcce-9569-4293-a50f-93e203969684"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6371),
                            PermissionId = new Guid("abc92f4e-980a-42fe-b62f-25c1ad27f8dd"),
                            RoleAccountId = new Guid("b23584d9-748c-4248-abbe-0a553c4716bc"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6372)
                        },
                        new
                        {
                            Id = new Guid("41fa3a2c-6402-487a-8d4c-1efcab27b202"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6375),
                            PermissionId = new Guid("0197e334-3431-426e-ae7e-60374118707b"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6375)
                        },
                        new
                        {
                            Id = new Guid("bf363cb9-10bd-42e8-b89c-cf9f42cb0d93"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6381),
                            PermissionId = new Guid("f1831356-fe9d-4f74-a66d-50c42da4efd6"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6382)
                        },
                        new
                        {
                            Id = new Guid("f1294ef7-edd3-4ea0-9270-5931fa78aa1d"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6385),
                            PermissionId = new Guid("0c24ccff-1cde-47a0-b58d-50ea0e8bc652"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6386)
                        },
                        new
                        {
                            Id = new Guid("62a4d49b-3ffb-4d0b-9bf5-947396bb013f"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6389),
                            PermissionId = new Guid("520bcdbd-8129-4dc6-8151-c16f238fda12"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6389)
                        },
                        new
                        {
                            Id = new Guid("b44abf4d-ceb3-4030-ab8b-8306af81b866"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6393),
                            PermissionId = new Guid("2de135a5-3149-425c-a73e-02d372367380"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6393)
                        },
                        new
                        {
                            Id = new Guid("37447490-3ac2-4ac9-a3b6-1be6953bfdef"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6396),
                            PermissionId = new Guid("95c66136-aca8-4b32-a852-c973b4cd2586"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6397)
                        },
                        new
                        {
                            Id = new Guid("62de43d1-cb62-4428-a638-5fce2df34ecd"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6400),
                            PermissionId = new Guid("c120becb-15d6-420b-aae7-b429709c391b"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6401)
                        },
                        new
                        {
                            Id = new Guid("fc941eb4-b4e3-4300-bc02-75fc188f6eab"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6404),
                            PermissionId = new Guid("96a52b57-258b-4cb4-bd21-47ebf9d04a70"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6405)
                        },
                        new
                        {
                            Id = new Guid("7ce75136-0695-46fa-b8d9-63f902200e7e"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6408),
                            PermissionId = new Guid("247ed2fa-2812-4d60-bb94-5131fe5ad65d"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6409)
                        },
                        new
                        {
                            Id = new Guid("75995e1c-a3c7-4420-8742-bdefab5e207c"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6414),
                            PermissionId = new Guid("c6fc4c0b-5238-4698-8378-2b20500087aa"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6415)
                        },
                        new
                        {
                            Id = new Guid("66d0ef3f-ca57-4a61-9bdb-3a116b70a299"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6418),
                            PermissionId = new Guid("952dea7b-d16c-4548-a84d-e2cfbe810747"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6419)
                        },
                        new
                        {
                            Id = new Guid("36f3756f-2513-4c80-b7b7-488fee3a9c2f"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6422),
                            PermissionId = new Guid("b608ff06-a7f4-479f-8033-3813125870fc"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6422)
                        },
                        new
                        {
                            Id = new Guid("8a11a6a1-3d43-4203-94ac-03b04e9fce5f"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6426),
                            PermissionId = new Guid("abc92f4e-980a-42fe-b62f-25c1ad27f8dd"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6426)
                        },
                        new
                        {
                            Id = new Guid("7de01e49-0c95-4fcd-aef9-e68f3c3f4369"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6430),
                            PermissionId = new Guid("0197e334-3431-426e-ae7e-60374118707b"),
                            RoleAccountId = new Guid("7a0c9b26-55a0-4197-a8d9-513b983b39b2"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = new Guid("8b499ff8-a78c-4b22-b7aa-577f35df8aaa"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6433),
                            PermissionId = new Guid("f1831356-fe9d-4f74-a66d-50c42da4efd6"),
                            RoleAccountId = new Guid("7a0c9b26-55a0-4197-a8d9-513b983b39b2"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6434)
                        },
                        new
                        {
                            Id = new Guid("b60b4d13-ed83-4f12-b498-ecc8fc77cb48"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6437),
                            PermissionId = new Guid("520bcdbd-8129-4dc6-8151-c16f238fda12"),
                            RoleAccountId = new Guid("7a0c9b26-55a0-4197-a8d9-513b983b39b2"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6438)
                        },
                        new
                        {
                            Id = new Guid("e5d0a801-ac09-4565-acac-3bcc51e5f715"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6441),
                            PermissionId = new Guid("2de135a5-3149-425c-a73e-02d372367380"),
                            RoleAccountId = new Guid("7a0c9b26-55a0-4197-a8d9-513b983b39b2"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6442)
                        },
                        new
                        {
                            Id = new Guid("d017acae-a0e6-4790-bd2e-75e50a88adbc"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6447),
                            PermissionId = new Guid("c120becb-15d6-420b-aae7-b429709c391b"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6448)
                        },
                        new
                        {
                            Id = new Guid("40b12ccf-a049-4ab0-997e-4b5f8f9da629"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6451),
                            PermissionId = new Guid("96a52b57-258b-4cb4-bd21-47ebf9d04a70"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6452)
                        },
                        new
                        {
                            Id = new Guid("54b51895-72c7-4d57-a56f-8e53ea80f1cc"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6455),
                            PermissionId = new Guid("c6fc4c0b-5238-4698-8378-2b20500087aa"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6456)
                        },
                        new
                        {
                            Id = new Guid("f64638ab-9ed3-4309-a9df-8409b9822103"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6459),
                            PermissionId = new Guid("952dea7b-d16c-4548-a84d-e2cfbe810747"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6460)
                        },
                        new
                        {
                            Id = new Guid("07f2cf94-d15b-4784-80a6-1c32579e535c"),
                            CreatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6463),
                            PermissionId = new Guid("b608ff06-a7f4-479f-8033-3813125870fc"),
                            RoleAccountId = new Guid("e44ce3f9-0218-41b6-94b2-44df2e845785"),
                            UpdatedAt = new DateTime(2025, 4, 15, 3, 15, 10, 195, DateTimeKind.Utc).AddTicks(6464)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePersonnel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RolePersonnels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8d73b25-3605-415a-8d0c-dca692a260d6"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5721),
                            RoleName = "Giám đốc",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5723)
                        },
                        new
                        {
                            Id = new Guid("b972b9d7-5bd3-4a24-aa1f-3a0d75799ce2"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5736),
                            RoleName = "Phó giám đốc",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5737)
                        },
                        new
                        {
                            Id = new Guid("ee255b75-f5af-4778-95ae-f5a3b740ad95"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5751),
                            RoleName = "Trưởng phòng",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5752)
                        },
                        new
                        {
                            Id = new Guid("c4d52df8-5860-4a42-9eb8-6937bd536329"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5755),
                            RoleName = "Phó phòng",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5756)
                        },
                        new
                        {
                            Id = new Guid("9e23ffa5-75c5-4dfc-b822-bc6057ce0c73"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5759),
                            RoleName = "Thực tập sinh",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5760)
                        },
                        new
                        {
                            Id = new Guid("f86c83c7-abba-4e89-b3eb-c9d850e3355e"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5764),
                            RoleName = "Nhân viên IT",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5764)
                        },
                        new
                        {
                            Id = new Guid("bb879534-d386-41ad-b5a6-555361c189a6"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5768),
                            RoleName = "Nhân viên nhân sự",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5769)
                        },
                        new
                        {
                            Id = new Guid("47137af3-dcb8-4d9c-81ad-430c274ad031"),
                            CreatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5772),
                            RoleName = "Kế toán",
                            UpdatedAt = new DateTime(2025, 4, 15, 10, 15, 9, 584, DateTimeKind.Utc).AddTicks(5773)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountId1");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Account", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.RoleAccount", "RoleAccount")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleAccount");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Personnel", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.RolePersonnel", "RolePersonnels")
                        .WithMany("Personnels")
                        .HasForeignKey("RolePersonnel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolePersonnels");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.PersonnelHistory", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.Personnel", "Personnel")
                        .WithMany("CheckHistory")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePermission", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.Models.Entities.RoleAccount", "RoleAccount")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("RoleAccount");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Token", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.Account", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.Models.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Account", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Personnel", b =>
                {
                    b.Navigation("CheckHistory");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RoleAccount", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePersonnel", b =>
                {
                    b.Navigation("Personnels");
                });
#pragma warning restore 612, 618
        }
    }
}
